{"version":3,"sources":["components/about/persone.jpg","components/header/nav.js","components/header/header-slide.js","components/about/about-titel.js","components/about/asx.js","components/about/about-info.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","className","href","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","class","nav","Component","AboutTitel","Asx","toggleVisibility","x","setState","answer","visibility","_this2","ask","map","onClick","q","AboutInfo","asx","App","header_slide","about_titel","titel","info","about_info","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+LAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2KCYzBC,QAVH,kBACVC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,oDACAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,8CACAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,mCAEAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,8DC4BWC,qBA7Bb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAO,GAFIP,wEAOhB,OACEP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAIdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEhBH,EAAAC,EAAAC,cAAA,mGACAF,EAAAC,EAAAC,cAAA,4vBACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAM,IAAIW,MAAM,iBAAnB,2DACAf,EAAAC,EAAAC,cAAA,KAAGE,KAAM,IAAKW,MAAM,iBAApB,+CAECf,EAAAC,EAAAC,cAACc,EAAD,cArBWC,cCcPC,QAjBI,WAGjB,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAGfH,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,+vBCoJWiB,qBAxCb,SAAAA,EAAYb,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAS,IACXZ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAW,GAAAN,KAAAH,KAAMJ,KAMVc,iBAAkB,SAACC,GACfd,EAAKe,SAAS,CAACC,OAAOF,KANtBd,EAAKO,MAAQ,CACVU,YAAa,EACbD,OAAO,IAJChB,wEAaJ,IAAAkB,EAAAf,KAIN,OACCV,EAAAC,EAAAC,cAAA,WACCQ,KAAKJ,MAAMoB,IAAIC,IAAI,SAACN,GACpB,OACDrB,EAAAC,EAAAC,cAAA,UAAQ0B,QAAS,kBAAIH,EAAKL,iBAAiBC,EAAEpB,KAAKoB,EAAEQ,EAApD,OAKE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,SAAIQ,KAAKI,MAAMS,iBA5BXN,cCrGHa,EAZE,kBACf9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAGhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAC6B,EAAD,CAAKL,IAAK,CAAC,CAACG,EAAE,cAAc5B,EAAE,SAAU,CAAC4B,EAAE,oBAAoB5B,EAAE,WAAW,CAAC4B,EAAE,qBAAqB5B,EAAE,cCMvF+B,0LAVX,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,CAAYC,MAAM,eAAeC,KAAK,qBACtCpC,EAAAC,EAAAC,cAACmC,EAAD,cANWpB,cCKEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.46b691ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persone.5dbb481d.jpg\";","import React from 'react';\nimport './index.css';\nconst Nav = ()=>(\n  <div className=\"navbar\"> \n    <a href=\"#\">الرئيسيه</a>\n    <a href=\"#\">أعمالنا</a>\n    <a href=\"#\">من نحن</a>\n   \n    <a href=\"#\">تواصل معنا</a>\n  </div>\n  )\n\nexport default Nav;","import React, { Component } from 'react';\nimport './index.css'\nimport Nav from './nav.js';\nimport Button from './button.js'\n\n\nclass Header extends  Component {\n  constructor(props){\n    super(props);\n    this.state ={\n\n    }\n  }\n  render(){\n    return(\n      <div>\n          <div className='imageHeader'>\n         \n        \n           </div>  \n           <div className=\"header--style\"> \n          \n          <h2>شركة الالمونيوم</h2> \n          <p> الشركات مع ازدهار الحركة التجارية وتوسّع انتشارها بسبب العولمة وعالم ... عن تسديد التزامات واحتياجات الشركة، يتكون اسم هذا النوع من الشركات من اسم ...</p>\n          <a href ='#' class=\"button--style\">تواصل معنا</a>\n          <a href ='#'  class=\"button--style\">أعمالنا</a>\n          </div>\n           <Nav /> \n         \n\n      </div>\n    )\n  }\n\n}\n\nexport default Header;","import React from 'react';\nimport './index.css'\n\nconst AboutTitel = () =>{\n\n  \n  return(\n    <div className=\"aboutTitel--style\">\n\n\n    <h2>معلومات عنا</h2>\n    <p> الشركات مع ازدهار الحركة التجارية وتوسّع انتشارها بسبب العولمة وعالم ... عن تسديد التزامات واحتياجات الشركة، يتكون اسم هذا النوع من الشركات من اسم ...</p>\n    \n  </div>\n    \n  )\n}\n\n\n\nexport default AboutTitel;","import React, {Component} from 'react';\nimport './index.css';\n// const { Provider, Consumer } = React.createContext({});\n\n// const Accordion = ({ children }) => <div>{children}</div>;\n\n// class AccordionItem extends Component {\n//    constructor(props) {\n//       super(props);\n//       this.state = {\n//          expanded: this.props.expanded || false\n//       };\n\n//       this.toggleVisibility = this.toggleVisibility.bind(this);\n//    }\n\n//    toggleVisibility() {\n//       this.setState(prevState => ({\n//          expanded: !prevState.expanded\n//       }));\n//    }\n\n//    render() {\n//       return (\n//          <Provider\n//             value={{\n//                expanded: this.state.expanded,\n//                onClick: this.toggleVisibility\n//             }}\n//          >\n//             {this.props.children}\n//          </Provider>\n//       );\n//    }\n// }\n\n// const AccordionItemTitle = ({ children }) => (\n//    <Consumer>\n//       {({ expanded, onClick }) => (\n//          <h2 className=\"title\">\n//             <button\n//                className=\"button2\"\n//                aria-expanded={expanded ? \"true\" : \"false\"}\n//                onClick={onClick}\n//             >\n//                {children}\n//             </button>\n//          </h2>\n//       )}\n//    </Consumer>\n// );\n\n// const AccordionItemBody = ({ children }) => (\n//    <Consumer>\n//       {({ expanded }) => (\n//          <div className=\"body\" hidden={!expanded}>\n//             {children}\n//          </div>\n//       )}\n//    </Consumer>\n// );\n\n// // Example usage\n// class Home extends React.Component{\n\n//   render() {\n//      return (\n//    <Accordion>\n//       <AccordionItem expanded>\n//          <AccordionItemTitle>How can I find other carers in the App? </AccordionItemTitle>\n//          <AccordionItemBody>\n//             <p>\n//                - You can go to the <b>Carers</b> tab in the navbar to view all other Carers\n//                cards and press at any card to show whole carer informaitions.\n//             </p>\n//          </AccordionItemBody>\n//       </AccordionItem>\n\n//       <AccordionItem>\n//          <AccordionItemTitle>How can I Add new Connection? </AccordionItemTitle>\n//          <AccordionItemBody>\n//             <p>\n//                - In the <b>Carers</b> section when you click at any card\n//                an <b>Add</b> button will appeare, you can send an connect request also you can\n//                cancle it by clicking at the button.\n//             </p>\n//          </AccordionItemBody>\n//       </AccordionItem>\n\n//       <AccordionItem>\n//          <AccordionItemTitle>How can I Edit my Profile? </AccordionItemTitle>\n//          <AccordionItemBody>\n//             <p>\n//               - By clicking at <b>Profile</b> in the navbar and adding/editing\n//               your profile detailes and save it by clicking at the <b>Save</b> button.\n//             </p>\n//          </AccordionItemBody>\n//       </AccordionItem>\n\n//       <AccordionItem>\n//          <AccordionItemTitle>How can I View my connections list? </AccordionItemTitle>\n//          <AccordionItemBody>\n//             <p>\n//                - Go to <b>Connections</b> section in the navbar you can view your connections\n//                 cards list, you can <b>Chat</b>, <b>View Profile</b> and <b>Delete</b> any connection\n//                 by clicking at his/her card and choose the action.\n//             </p>\n//          </AccordionItemBody>\n//       </AccordionItem>\n\n//    </Accordion>\n// );\n// }\n// }\n\n// export default Home;\n\n\nclass Asx extends Component {\n  constructor(props) {\n          super(props);\n          this.state = {\n             visibility:  false,\n             answer:''\n          };\n        }\n      toggleVisibility =(x)=> {\n          this.setState({answer:x}  \n          )\n             }\n\n        \n         render(){\n\n      \n           \n           return(\n            <div> \n            {this.props.ask.map((x) => {\n             return(\n            <button onClick={()=>this.toggleVisibility(x.a)}>{x.q} </button> \n\n             )}\n            )}\n            \n              <div className=\"asx-style\">\n              <p>{this.state.answer}</p>\n              </div>\n           \n\n            \n       \n        \n        </div>\n           )\n         }\n\n}\n\nexport default Asx;","import React from 'react';\nimport './index.css';\nimport person from './persone.jpg'\nimport Asx from './asx.js'\n\nconst AboutInfo= () =>(\n  <div className=\"aboutInfo--style\">\n <div className=\"infoImage\">\n\n </div>\n<div className=\"infoAsx \">\n<Asx ask={[{q:'how are you',a:'fine '} ,{q:'what is your name',a:'emaaaan'},{q:'where are you from',a:'gaza'}]}/>\n</div>\n\n  </div>\n)\n\nexport default AboutInfo;","import React, { Component } from 'react';\nimport Header from './components/header/header-slide'\nimport { AboutTitel , AboutInfo} from './components/about/'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Header />\n       <AboutTitel titel='ssssssssssss' info='wwwwwwwwwwwwwwww'/>\n       <AboutInfo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}